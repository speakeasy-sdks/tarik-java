/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package tarik.LK.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import tarik.LK.utils.DateTimeDeserializer;
import tarik.LK.utils.DateTimeSerializer;

/**
 * Order - Represents full info about order
 */
public class Order {
    /**
     * Format YYYY-MM-DD[T]HH:MM
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public Order withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Represents info about order customer
     */
    @JsonProperty("customer")
    public Customer customer;

    public Order withCustomer(Customer customer) {
        this.customer = customer;
        return this;
    }
    
    @JsonProperty("items")
    public Item[] items;

    public Order withItems(Item[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * This field could be numeric string
     */
    @JsonProperty("merchant_id")
    public Long merchantId;

    public Order withMerchantId(Long merchantId) {
        this.merchantId = merchantId;
        return this;
    }
    
    /**
     * This field could be numeric string
     */
    @JsonProperty("order_id")
    public Long orderId;

    public Order withOrderId(Long orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * Represents info about order payment
     */
    @JsonProperty("payment")
    public Payment payment;

    public Order withPayment(Payment payment) {
        this.payment = payment;
        return this;
    }
    
    /**
     * Represents info about shipping order
     */
    @JsonProperty("shipping")
    public Shipping shipping;

    public Order withShipping(Shipping shipping) {
        this.shipping = shipping;
        return this;
    }
    
    public Order(@JsonProperty("created_at") OffsetDateTime createdAt, @JsonProperty("customer") Customer customer, @JsonProperty("items") Item[] items, @JsonProperty("merchant_id") Long merchantId, @JsonProperty("order_id") Long orderId, @JsonProperty("payment") Payment payment, @JsonProperty("shipping") Shipping shipping) {
        this.createdAt = createdAt;
        this.customer = customer;
        this.items = items;
        this.merchantId = merchantId;
        this.orderId = orderId;
        this.payment = payment;
        this.shipping = shipping;
  }
}
